{"version":3,"sources":["../../src/módulos/Tipo.ts"],"sourcesContent":["import { Número } from './Número';\nimport { Exceção } from '../integridade/Exceção';\n\nexport class Tipo {\n  readonly #número = new Número();\n\n  public booleano(): boolean {\n    return Math.random() < 0.5;\n  }\n\n  public entre<T>(valores: T[]): T {\n    const possibilidades = valores.length;\n    if (possibilidades <= 1)\n      throw new Exceção('Lista deve ter ao menos 2 itens.');\n\n    return valores[this.#número.exclusivoEntreZeroE(possibilidades)];\n  }\n\n  public cópiaEmbaralhada<T>(original: T[]): T[] {\n    if (original.length <= 1)\n      throw new Exceção('Lista deve ter ao menos 2 itens.');\n\n    const cópia: T[] = new Array(original.length);\n\n    for (let i = 0; i < original.length; i++) {\n      const aleatório = i === 0 ? 0 : this.#número.entreZeroE(i);\n      cópia[i] = cópia[aleatório];\n      cópia[aleatório] = original[i];\n    }\n\n    return cópia;\n  }\n}\n"],"names":["Número","Exceção","Tipo","booleano","Math","random","entre","valores","possibilidades","length","exclusivoEntreZeroE","cópiaEmbaralhada","original","cópia","Array","i","aleatório","entreZeroE"],"mappings":"AAAA,OAASA,MAAM,KAAQ,aAAW,AAClC,QAASC,OAAO,KAAQ,2BAAyB,AAEjD,QAAO,MAAMC,KACX,AAAS,CAAA,MAAO,CAAG,IAAIF,MAAS,AAEhC,CAAOG,UAAoB,CACzB,OAAOC,KAAKC,MAAM,GAAK,EACzB,CAEA,AAAOC,MAASC,OAAY,CAAK,CAC/B,MAAMC,eAAiBD,QAAQE,MAAM,CACrC,GAAID,gBAAkB,EACpB,MAAM,IAAIP,QAAQ,oCAEpB,OAAOM,OAAO,CAAC,IAAI,CAAC,CAAA,MAAO,CAACG,mBAAmB,CAACF,gBAAgB,AAClE,CAEA,AAAOG,iBAAoBC,QAAa,CAAO,CAC7C,GAAIA,SAASH,MAAM,EAAI,EACrB,MAAM,IAAIR,QAAQ,oCAEpB,MAAMY,MAAa,IAAIC,MAAMF,SAASH,MAAM,EAE5C,IAAK,IAAIM,EAAI,EAAGA,EAAIH,SAASH,MAAM,CAAEM,IAAK,CACxC,MAAMC,UAAYD,IAAM,EAAI,EAAI,IAAI,CAAC,CAAA,MAAO,CAACE,UAAU,CAACF,EACxDF,CAAAA,KAAK,CAACE,EAAE,CAAGF,KAAK,CAACG,UAAU,AAC3BH,CAAAA,KAAK,CAACG,UAAU,CAAGJ,QAAQ,CAACG,EAAE,AAChC,CAEA,OAAOF,KACT,CACF"}