{"version":3,"sources":["../src/ComandoNúmero.ts"],"sourcesContent":["import { falseador } from 'falseador-lib';\nimport {\n  validaNúmeroInteiro,\n  validaNúmeroInteiroNãoNegativo,\n  validaNúmeroInteiroPositivo,\n  validaNúmeroMaiorQue1,\n} from './Utilitários';\nimport { Comando } from './Comando';\n\nexport class ComandoNúmero extends Comando {\n  public constructor() {\n    super('numero');\n\n    super\n      .description('Gera números aleatórios.')\n      .alias('no')\n      .addCommand(this.subcomandoZero())\n      .addCommand(this.subcomandoUm())\n      .addCommand(this.subcomandoEntre(), { isDefault: true })\n      .addCommand(this.subcomandoRomano())\n      .addCommand(this.subcomandoExtenso());\n  }\n\n  private subcomandoZero() {\n    return new Comando('0')\n      .description('entre zero e x.')\n      .argument('x', 'Limite superior.', validaNúmeroInteiroPositivo)\n      .option('--exclusivo', 'exclui limite superior.', false)\n      .action((x: number, opções: { exclusivo: boolean }) => {\n        const resultado = falseador.número.entreZeroE(x, !opções.exclusivo);\n        process.stdout.write(resultado.toString());\n      });\n  }\n\n  private subcomandoUm() {\n    return new Comando('1')\n      .description('entre um e x.')\n      .argument('x', 'Limite superior.', validaNúmeroMaiorQue1)\n      .option('--exclusivo', 'exclui limite superior.', false)\n      .action((x: number, opções: { exclusivo: boolean }) => {\n        const resultado = falseador.número.entreUmE(x, !opções.exclusivo);\n        process.stdout.write(resultado.toString());\n      });\n  }\n\n  private subcomandoEntre() {\n    return new Comando('entre')\n      .description(\n        'entre y e z, inclusivos.\\nUtilize \"\\\\ \" para especificar negativos, p. ex:\\n\\tfalseador no entre \\\\ -7 10',\n      )\n      .argument('y', 'Limite inferior.', validaNúmeroInteiro)\n      .argument('z', 'Limite superior.', validaNúmeroInteiro)\n      .action((y: number, z: number) => {\n        const resultado = falseador.número.entre(y, z);\n        process.stdout.write(resultado.toString());\n      });\n  }\n\n  private subcomandoRomano() {\n    return new Comando('romano')\n      .description('inteiro positivo para número romano.')\n      .argument(\n        'x',\n        'número arábico entre 1 e 3999.',\n        validaNúmeroInteiroPositivo,\n      )\n      .action((x: number) => {\n        const resultado = falseador.número.romano(x);\n        process.stdout.write(resultado);\n      });\n  }\n\n  private subcomandoExtenso() {\n    return new Comando('porextenso')\n      .description('inteiro não-negativo por extenso.')\n      .alias('pe')\n      .argument(\n        'x',\n        'número arábico entre 0 e 999999999999.',\n        validaNúmeroInteiroNãoNegativo,\n      )\n      .action((x: number) => {\n        const resultado = falseador.número.porExtenso(x);\n        process.stdout.write(resultado);\n      });\n  }\n}\n"],"names":["falseador","validaNúmeroInteiro","validaNúmeroInteiroNãoNegativo","validaNúmeroInteiroPositivo","validaNúmeroMaiorQue1","Comando","ComandoNúmero","description","alias","addCommand","subcomandoZero","subcomandoUm","subcomandoEntre","isDefault","subcomandoRomano","subcomandoExtenso","argument","option","action","x","opções","resultado","número","entreZeroE","exclusivo","process","stdout","write","toString","entreUmE","y","z","entre","romano","porExtenso"],"mappings":"AAAA,OAASA,SAAS,KAAQ,eAAgB,AAC1C,QACEC,mBAAmB,CACnBC,8BAA8B,CAC9BC,2BAA2B,CAC3BC,qBAAqB,KAChB,kBAAgB,AACvB,QAASC,OAAO,KAAQ,cAAY,AAEpC,QAAO,MAAMC,sBAAsBD,QACjC,aAAqB,CACnB,KAAK,CAAC,UAEN,KAAK,CACFE,YAAY,4BACZC,KAAK,CAAC,MACNC,UAAU,CAAC,IAAI,CAACC,cAAc,IAC9BD,UAAU,CAAC,IAAI,CAACE,YAAY,IAC5BF,UAAU,CAAC,IAAI,CAACG,eAAe,GAAI,CAAEC,UAAW,IAAK,GACrDJ,UAAU,CAAC,IAAI,CAACK,gBAAgB,IAChCL,UAAU,CAAC,IAAI,CAACM,iBAAiB,GACtC,CAEA,AAAQL,gBAAiB,CACvB,OAAO,IAAIL,QAAQ,KAChBE,WAAW,CAAC,mBACZS,QAAQ,CAAC,IAAK,mBAAoBb,6BAClCc,MAAM,CAAC,cAAe,0BAA2B,OACjDC,MAAM,CAAC,CAACC,EAAWC,UAClB,MAAMC,UAAYrB,UAAUsB,MAAM,CAACC,UAAU,CAACJ,EAAG,CAACC,OAAOI,SAAS,EAClEC,QAAQC,MAAM,CAACC,KAAK,CAACN,UAAUO,QAAQ,GACzC,EACJ,CAEA,AAAQjB,cAAe,CACrB,OAAO,IAAIN,QAAQ,KAChBE,WAAW,CAAC,iBACZS,QAAQ,CAAC,IAAK,mBAAoBZ,uBAClCa,MAAM,CAAC,cAAe,0BAA2B,OACjDC,MAAM,CAAC,CAACC,EAAWC,UAClB,MAAMC,UAAYrB,UAAUsB,MAAM,CAACO,QAAQ,CAACV,EAAG,CAACC,OAAOI,SAAS,EAChEC,QAAQC,MAAM,CAACC,KAAK,CAACN,UAAUO,QAAQ,GACzC,EACJ,CAEA,AAAQhB,iBAAkB,CACxB,OAAO,IAAIP,QAAQ,SAChBE,WAAW,CACV,4GAEDS,QAAQ,CAAC,IAAK,mBAAoBf,qBAClCe,QAAQ,CAAC,IAAK,mBAAoBf,qBAClCiB,MAAM,CAAC,CAACY,EAAWC,KAClB,MAAMV,UAAYrB,UAAUsB,MAAM,CAACU,KAAK,CAACF,EAAGC,GAC5CN,QAAQC,MAAM,CAACC,KAAK,CAACN,UAAUO,QAAQ,GACzC,EACJ,CAEA,AAAQd,kBAAmB,CACzB,OAAO,IAAIT,QAAQ,UAChBE,WAAW,CAAC,wCACZS,QAAQ,CACP,IACA,iCACAb,6BAEDe,MAAM,CAAC,AAACC,IACP,MAAME,UAAYrB,UAAUsB,MAAM,CAACW,MAAM,CAACd,GAC1CM,QAAQC,MAAM,CAACC,KAAK,CAACN,UACvB,EACJ,CAEA,AAAQN,mBAAoB,CAC1B,OAAO,IAAIV,QAAQ,cAChBE,WAAW,CAAC,qCACZC,KAAK,CAAC,MACNQ,QAAQ,CACP,IACA,yCACAd,gCAEDgB,MAAM,CAAC,AAACC,IACP,MAAME,UAAYrB,UAAUsB,MAAM,CAACY,UAAU,CAACf,GAC9CM,QAAQC,MAAM,CAACC,KAAK,CAACN,UACvB,EACJ,CACF"}