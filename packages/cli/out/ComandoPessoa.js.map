{"version":3,"sources":["../src/ComandoPessoa.ts"],"sourcesContent":["import { Option } from 'commander';\nimport { falseador, type Gênero, type UFSigla } from 'falseador-lib';\n\nimport { gênero } from './Utilitários';\nimport { Comando } from './Comando';\n\ntype Pessoa = {\n  nome: string;\n  nascimento: string;\n  idade: number;\n  email: string;\n  cpf: string;\n  cidade: string;\n  estado: UFSigla;\n};\n\nexport class ComandoPessoa extends Comando {\n  public constructor() {\n    super('pessoa');\n\n    super\n      .description('Gera dados pessoais.')\n      .alias('p')\n      .addCommand(this.subcomandoCompleta(), { isDefault: true })\n      .addCommand(this.subcomandoEmail());\n  }\n\n  private subcomandoEmail() {\n    return new Comando('email')\n      .description('e-mail pessoal.')\n      .argument('[nome]', 'Nome a derivar para endereço de e-mail.')\n      .action((nome) => {\n        process.stdout.write(falseador.pessoa.email(nome));\n      });\n  }\n\n  private subcomandoCompleta() {\n    const { local, data, doc, pessoa: ps, nome: nm } = falseador;\n\n    return new Comando('completa')\n      .description(\n        'Dados pessoais: nome, nascimento, idade, cpf, email, cidade e UF.',\n      )\n      .addArgument(gênero)\n      .addOption(\n        new Option('--json', 'exibe como JSON (padrão).').conflicts('tabela'),\n      )\n      .option('--tabela', 'exibe como tabela.')\n      .action(\n        (gênero: Gênero, opções: { tabela?: boolean; json?: boolean }) => {\n          const nome = nm.completo(gênero);\n          const ddn = data.entrePeríodoEmAnos(new Date(), -100, -18);\n          const nascimento = this.#removaHoras(ddn);\n          const idade = this.#calculeIdade(ddn);\n          const cpf = doc.cpf();\n          const email = ps.email(nome);\n          const [cidade, estado] = local.cidade();\n\n          const pessoa: Pessoa = {\n            nome,\n            nascimento,\n            idade,\n            cpf,\n            email,\n            cidade,\n            estado,\n          };\n\n          let resultado = '';\n\n          if (opções?.tabela) resultado = this.#monteTabela(pessoa);\n          else resultado = JSON.stringify(pessoa);\n\n          process.stdout.write(resultado);\n        },\n      );\n  }\n\n  #monteTabela(pessoa: Pessoa) {\n    let tabela = '';\n    Object.entries(pessoa).forEach(([atributo, valor]) => {\n      tabela += atributo.padEnd(20) + valor + '\\n';\n    });\n    return tabela.substring(0, tabela.length - 1);\n  }\n\n  #removaHoras(data: Date) {\n    return data.toISOString().split('T')[0];\n  }\n\n  #calculeIdade(data: Date) {\n    const hoje = new Date().getTime();\n    return Math.floor((hoje - data.getTime()) / 3.15576e10);\n  }\n}\n"],"names":["Option","falseador","gênero","Comando","ComandoPessoa","description","alias","addCommand","subcomandoCompleta","isDefault","subcomandoEmail","argument","action","nome","process","stdout","write","pessoa","email","local","data","doc","ps","nm","addArgument","addOption","conflicts","option","opções","completo","ddn","entrePeríodoEmAnos","Date","nascimento","idade","cpf","cidade","estado","resultado","tabela","JSON","stringify","Object","entries","forEach","atributo","valor","padEnd","substring","length","toISOString","split","hoje","getTime","Math","floor"],"mappings":"AAAA,OAASA,MAAM,KAAQ,WAAY,AACnC,QAASC,SAAS,KAAmC,eAAgB,AAErE,QAASC,MAAM,KAAQ,kBAAgB,AACvC,QAASC,OAAO,KAAQ,cAAY,AAYpC,QAAO,MAAMC,sBAAsBD,QACjC,aAAqB,CACnB,KAAK,CAAC,UAEN,KAAK,CACFE,YAAY,wBACZC,KAAK,CAAC,KACNC,UAAU,CAAC,IAAI,CAACC,kBAAkB,GAAI,CAAEC,UAAW,IAAK,GACxDF,UAAU,CAAC,IAAI,CAACG,eAAe,GACpC,CAEA,AAAQA,iBAAkB,CACxB,OAAO,IAAIP,QAAQ,SAChBE,WAAW,CAAC,mBACZM,QAAQ,CAAC,SAAU,2CACnBC,MAAM,CAAC,AAACC,OACPC,QAAQC,MAAM,CAACC,KAAK,CAACf,UAAUgB,MAAM,CAACC,KAAK,CAACL,MAC9C,EACJ,CAEA,AAAQL,oBAAqB,CAC3B,KAAM,CAAEW,KAAK,CAAEC,IAAI,CAAEC,GAAG,CAAEJ,OAAQK,EAAE,CAAET,KAAMU,EAAE,CAAE,CAAGtB,UAEnD,OAAO,IAAIE,QAAQ,YAChBE,WAAW,CACV,qEAEDmB,WAAW,CAACtB,QACZuB,SAAS,CACR,IAAIzB,OAAO,SAAU,6BAA6B0B,SAAS,CAAC,WAE7DC,MAAM,CAAC,WAAY,sBACnBf,MAAM,CACL,CAACV,OAAgB0B,UACf,MAAMf,KAAOU,GAAGM,QAAQ,CAAC3B,QACzB,MAAM4B,IAAMV,KAAKW,kBAAkB,CAAC,IAAIC,KAAQ,CAAC,IAAK,CAAC,IACvD,MAAMC,WAAa,IAAI,CAAC,CAAA,WAAY,CAACH,KACrC,MAAMI,MAAQ,IAAI,CAAC,CAAA,YAAa,CAACJ,KACjC,MAAMK,IAAMd,IAAIc,GAAG,GACnB,MAAMjB,MAAQI,GAAGJ,KAAK,CAACL,MACvB,KAAM,CAACuB,OAAQC,OAAO,CAAGlB,MAAMiB,MAAM,GAErC,MAAMnB,OAAiB,CACrBJ,KACAoB,WACAC,MACAC,IACAjB,MACAkB,OACAC,MACF,EAEA,IAAIC,UAAY,GAEhB,GAAIV,QAAQW,OAAQD,UAAY,IAAI,CAAC,CAAA,WAAY,CAACrB,aAC7CqB,UAAYE,KAAKC,SAAS,CAACxB,QAEhCH,QAAQC,MAAM,CAACC,KAAK,CAACsB,UACvB,EAEN,CAEA,CAAA,WAAY,CAACrB,MAAc,EACzB,IAAIsB,OAAS,GACbG,OAAOC,OAAO,CAAC1B,QAAQ2B,OAAO,CAAC,CAAC,CAACC,SAAUC,MAAM,IAC/CP,QAAUM,SAASE,MAAM,CAAC,IAAMD,MAAQ,IAC1C,GACA,OAAOP,OAAOS,SAAS,CAAC,EAAGT,OAAOU,MAAM,CAAG,EAC7C,CAEA,CAAA,WAAY,CAAC7B,IAAU,EACrB,OAAOA,KAAK8B,WAAW,GAAGC,KAAK,CAAC,IAAI,CAAC,EAAE,AACzC,CAEA,CAAA,YAAa,CAAC/B,IAAU,EACtB,MAAMgC,KAAO,IAAIpB,OAAOqB,OAAO,GAC/B,OAAOC,KAAKC,KAAK,CAAC,AAACH,CAAAA,KAAOhC,KAAKiC,OAAO,EAAC,EAAK,SAC9C,CACF"}